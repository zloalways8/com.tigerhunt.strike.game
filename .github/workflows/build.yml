name: Build

on: push

env:
  UNITY_LICENSE: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><root>\n    <License id=\"Terms\">\n        <MachineBindings>\n            <Binding Key=\"1\" Value=\"576562626572264761624c65526f7578\"/>\n            <Binding Key=\"2\" Value=\"576562626572264761624c65526f7578\"/>\n        </MachineBindings>\n        <MachineID Value=\"D7nTUnjNAmtsUMcnoyrqkgIbYdM=\"/>\n        <SerialHash Value=\"1efd68fa935192b6090ac03c77d289a9f588c55a\"/>\n        <Features>\n            <Feature Value=\"33\"/>\n            <Feature Value=\"1\"/>\n            <Feature Value=\"12\"/>\n            <Feature Value=\"2\"/>\n            <Feature Value=\"24\"/>\n            <Feature Value=\"3\"/>\n            <Feature Value=\"36\"/>\n            <Feature Value=\"17\"/>\n            <Feature Value=\"19\"/>\n            <Feature Value=\"62\"/>\n        </Features>\n        <DeveloperData Value=\"AQAAAEY0LUg2WFMtUE00NS1SM0M4LUUyWlotWkdWOA==\"/>\n        <SerialMasked Value=\"F4-H6XS-PM45-R3C8-E2ZZ-XXXX\"/>\n        <StartDate Value=\"2018-05-02T00:00:00\"/>\n        <UpdateDate Value=\"2021-05-21T20:48:24\"/>\n        <InitialActivationDate Value=\"2018-05-02T14:21:28\"/>\n        <LicenseVersion Value=\"6.x\"/>\n        <ClientProvidedVersion Value=\"2019.2.11f1\"/>\n        <AlwaysOnline Value=\"false\"/>\n        <Entitlements>\n            <Entitlement Ns=\"unity_editor\" Tag=\"UnityPersonal\" Type=\"EDITOR\" ValidTo=\"9999-12-31T00:00:00\"/>\n            <Entitlement Ns=\"unity_editor\" Tag=\"DarkSkin\" Type=\"EDITOR_FEATURE\" ValidTo=\"9999-12-31T00:00:00\"/>\n        </Entitlements>\n    </License>\n<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><SignedInfo><CanonicalizationMethod Algorithm=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"/><SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/><Reference URI=\"#Terms\"><Transforms><Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/></Transforms><DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/><DigestValue>Ui8I607il6gWRH3o8x/HMV7eva8=</DigestValue></Reference></SignedInfo><SignatureValue>bW/8QoV0skYzBUtBvMCxZsQa1kjdBw1cumQZeaSuF9FjpHzp3blFEBTtvvOOB7C0j/19qtdV/QMq\nXkMQj2qQ99rYQPXSrPKySQrdm/6riYd2VPhOMc4QSsbV/OphYOMYkYju1tsvY4ZDi6TDFuT7C1OR\nwiCtmvbUs9Lw/u3jMGjWd/cqZAkupulnXpGz8ltI2GA3RWwpFH+rxEOJWlpqYIfioKntlHv8dbAx\n5fONrmMH2yMJQaS3YOW2noZkoMCgMlsuXE6ddqKz0soWbYXqXEQcNHY4JWcDr97ISdeI3fDP1/XR\nz0bzpLWTGR4lPxuREKW7jqnk/NwoVUXx+anUKg==</SignatureValue></Signature></root>"
  UNITY_EMAIL: "unitydatastorage@gmail.com"
  UNITY_PASSWORD: "qwerty12345Q"
  
  APP_NAME: "com.tigerhunt.strike.game"
  
  AndroidKeystorePass: "qwerty"
  AndroidKeyaliasPass: "qwerty"
  AndroidKeyaliasName: "qwerty"
  
  ChatID_APK: "-1002022770110"
  ChatID_AAB: "-1002022770110"
  ChatID_LOG: "5419377045"
  BotToken: "5541471253:AAFGq-cwlYERC9nSYc68_94bWOH0Fx1KkVU"
  BotTokenLog: "7014683250:AAH9RXxVVxUHndh3zX7zJCen5WVIMmrG_EE"

jobs:
  EncodeKeystoreToBase64:
    name: Encode keystore file to base64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Encoding to base64 string
        id: encoding
        run: echo $(base64 -w 0 ${{ github.workspace }}/user.keystore) > encoded.txt
      - name: Set output
        id: output
        run: echo "::set-output name=encoding::$(cat encoded.txt)"

  buildAndroidAPK:
    name: Build for Android(APK)
    runs-on: ubuntu-latest
    needs: EncodeKeystoreToBase64
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      
      - name: Free Disk Space for Android
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          if [ "$(docker image ls -q)" != "" ]; then
            docker rmi $(docker image ls -aq)
          fi
          df -h
          
      - uses: game-ci/unity-builder@v2.1.2
        with:
          buildName: ${{ env.APP_NAME }}
          androidAppBundle: false
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ needs.EncodeKeystoreToBase64.outputs.encoding }}
          androidKeystorePass: ${{ env.AndroidKeystorePass }}
          androidKeyaliasName: ${{ env.AndroidKeyaliasName }}
          androidKeyaliasPass: ${{ env.AndroidKeyaliasPass }}
          targetPlatform: Android
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}
          path: build/Android

  buildAndroidAAB:
    name: Build for Android(AAB)
    runs-on: ubuntu-latest
    needs: EncodeKeystoreToBase64
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      
      - name: Free Disk Space for Android
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          if [ "$(docker image ls -q)" != "" ]; then
            docker rmi $(docker image ls -aq)
          fi
          df -h
          
      - uses: game-ci/unity-builder@v2.1.2
        with:
          buildName: ${{ env.APP_NAME }}
          androidAppBundle: true
          androidVersionCode: 1
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ needs.EncodeKeystoreToBase64.outputs.encoding }}
          androidKeystorePass: ${{ env.AndroidKeystorePass }}
          androidKeyaliasName: ${{ env.AndroidKeyaliasName }}
          androidKeyaliasPass: ${{ env.AndroidKeyaliasPass }}
          targetPlatform: Android
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}
          path: build/Android

  sendTelegramNotify:
    runs-on: ubuntu-latest
    needs: [buildAndroidAPK, buildAndroidAAB]
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.APP_NAME }}
          path: ${{ github.workspace }}/build/Android
      - name: Send APK
        if: ${{ needs.buildAndroidAPK.result == 'success' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.ChatID_APK }}
          token: ${{ env.BotToken }}
          message: " "
          document: ${{ github.workspace }}/build/Android/${{ env.APP_NAME }}.apk
      - name: Send AAB
        if: ${{ needs.buildAndroidAAB.result == 'success' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.ChatID_AAB }}
          token: ${{ env.BotToken }}
          message: " "
          document: ${{ github.workspace }}/build/Android/${{ env.APP_NAME }}.aab

  sendFailureNotification:
    runs-on: ubuntu-latest
    needs: [buildAndroidAPK, buildAndroidAAB, sendTelegramNotify]
    if: always()
    steps:
      - name: Send Failure Notification
        if: ${{ failure() || needs.buildAndroidAPK.result == 'failure' || needs.buildAndroidAAB.result == 'failure' || needs.sendTelegramNotify.result == 'failure' }}
        run: |
          LOG_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          USERNAME="${{ github.actor }}"
          curl -s -X POST https://api.telegram.org/bot${{ env.BotTokenLog }}/sendMessage -d chat_id=${{ env.ChatID_LOG }} -d text="Build failed for ${{ env.APP_NAME }} by $USERNAME. Logs: $LOG_URL"
      - name: Send Success Notification
        if: ${{ success() && needs.buildAndroidAPK.result == 'success' && needs.buildAndroidAAB.result == 'success' && needs.sendTelegramNotify.result == 'success' }}
        run: |
          LOG_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          USERNAME="${{ github.actor }}"
          curl -s -X POST https://api.telegram.org/bot${{ env.BotTokenLog }}/sendMessage -d chat_id=${{ env.ChatID_LOG }} -d text="Build succeeded for ${{ env.APP_NAME }} by $USERNAME. Logs: $LOG_URL"